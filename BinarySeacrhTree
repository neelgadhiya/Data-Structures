#include<stdio.h> 
#include<stdlib.h> 
#include<conio.h> 
typedef struct tree 
{ 
  int data; 
  struct tree *left,*right; 
}tree; 
tree *insert(int a,tree *p) 
{ 
  if(p==NULL) 
   { 
      p=(tree*)malloc(sizeof(tree)); 
      p->data=a; 
      p->left=NULL; 
      p->right=NULL; 
    } 
  else 
  { 
    if(a<p->data) 
    { 
      p->left=insert(a,p->left); 
    } 
    if(a>=p->data) 
    { 
      p->right=insert(a,p->right); 
    } 
  } 
  return p; 
} 
void preorder(tree * ptr) 
{ 
  if(ptr!=NULL) 
   { 
      printf(" %d",ptr->data); 
      preorder(ptr->left); 
      preorder(ptr->right); 
    } 
} 
void inorder(tree * ptr)
{ 
  if(ptr!=NULL) 
  { 
    inorder(ptr->left); 
    printf(" %d",ptr->data); 
    inorder(ptr->right); 
  } 
} 
void postorder(tree * ptr) 
{ 
  if(ptr!=NULL) 
  { 
    postorder(ptr->left); 
    postorder(ptr->right); 
    printf(" %d",ptr->data); 
  } 
} 
void main() 
{ 
  int x; 
  tree * root=NULL; 
  clrscr(); 
   do 
   { 
      printf("\n Enter the element to be inserted:");
      printf("\nEnter -999 to stop\n"); 
      scanf(" %d",&x); 
      if(x==-999) break; 
      root=insert(x,root); 
    }while(1); 
    printf("\nPreorder:\n"); 
    printf("\n----Main-----%d:\n", root->data); 
    preorder(root); 
    printf("\nInorder:\n"); 
    inorder(root); 
    printf("\nPostorder:\n"); 
    postorder(root); 
    getch(); 
}
